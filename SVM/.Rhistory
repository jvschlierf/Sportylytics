# 20630 - Introduction to Sports Analytics
# Group 2 Project 3 - Supervised Machine Learning Model
# Model X: Support Vector Machine
# Clear environment & set working directory
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Package download & import
my_packages <- c("quantmod","PerformanceAnalytics","ellipse","reshape2","ggplot2", "rvest", "stringr",
"dygraphs", "dplyr","forecast", "aod","readr","rvest","lubridate", "xml2", "caret", "e1071")
for (j in listofpackages){
if(sum(installed.packages()[, 1] == j) == 0) {
install.packages(j)
}
library(j, character.only = T)
}
### 1. PREPROCESSING ###
#Load Data (both train and test)
train_basket <- read.csv('../Dataset/data_Bplayers_2000_TRAIN.csv')
test_basket <- read.csv('../Dataset/data_Bplayers_2000_TEST.csv')
#Creating and applying a function for common pre-treatment of train and test
pre_treat <- function(dataset){
#Create dummies for the role
dataset$pos = lapply(dataset$pos, function(x) if (nchar(x)>2) {x=unlist(str_split(x, ",", simplify = TRUE)[1,1])} else {x})
dataset$pos = unlist(dataset[,"pos"])
dataset <- dummy_cols(dataset, select_columns = 'pos')
#Let's drop columns we won't use
drops <- c("season","Player",'tm','lg','Salary_Cap','Salary', 'pos')
dataset = dataset[ , !(names(dataset) %in% drops)]
#We replace NA with 0
dataset[is.na(dataset)] = 0
dataset
}
train_basket = pre_treat(train_basket)
test_basket = pre_treat(test_basket)
#Divide X and Y in test
test_basket_x = subset(test_basket, select = -Salary_Cap_Perc) # feature and target array
test_basket_y = test_basket[, "Salary_Cap_Perc"]
# 20630 - Introduction to Sports Analytics
# Group 2 Project 3 - Supervised Machine Learning Model
# Model X: Support Vector Machine
# Clear environment & set working directory
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Package download & import
listofpackages <- c("quantmod","PerformanceAnalytics","ellipse","reshape2","ggplot2", "rvest", "stringr",
"dygraphs", "dplyr","forecast", "aod","readr","rvest","lubridate", "xml2", "caret", "e1071")
for (j in listofpackages){
if(sum(installed.packages()[, 1] == j) == 0) {
install.packages(j)
}
library(j, character.only = T)
}
### 1. PREPROCESSING ###
#Load Data (both train and test)
train_basket <- read.csv('../Dataset/data_Bplayers_2000_TRAIN.csv')
test_basket <- read.csv('../Dataset/data_Bplayers_2000_TEST.csv')
#Creating and applying a function for common pre-treatment of train and test
pre_treat <- function(dataset){
#Create dummies for the role
dataset$pos = lapply(dataset$pos, function(x) if (nchar(x)>2) {x=unlist(str_split(x, ",", simplify = TRUE)[1,1])} else {x})
dataset$pos = unlist(dataset[,"pos"])
dataset <- dummy_cols(dataset, select_columns = 'pos')
#Let's drop columns we won't use
drops <- c("season","Player",'tm','lg','Salary_Cap','Salary', 'pos')
dataset = dataset[ , !(names(dataset) %in% drops)]
#We replace NA with 0
dataset[is.na(dataset)] = 0
dataset
}
train_basket = pre_treat(train_basket)
test_basket = pre_treat(test_basket)
#Divide X and Y in test
test_basket_x = subset(test_basket, select = -Salary_Cap_Perc) # feature and target array
test_basket_y = test_basket[, "Salary_Cap_Perc"]
# 20630 - Introduction to Sports Analytics
# Group 2 Project 3 - Supervised Machine Learning Model
# Model X: Support Vector Machine
# Clear environment & set working directory
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Package download & import
listofpackages <- c("quantmod","PerformanceAnalytics","ellipse","reshape2","ggplot2", "rvest",
"stringr", "dygraphs", "dplyr","forecast", "aod","readr","rvest","lubridate",
"xml2", "caret", "gbm", "fastDummies", "pdp", "e1071")
for (j in listofpackages){
if(sum(installed.packages()[, 1] == j) == 0) {
install.packages(j)
}
library(j, character.only = T)
}
### 1. PREPROCESSING ###
#Load Data (both train and test)
train_basket <- read.csv('../Dataset/data_Bplayers_2000_TRAIN.csv')
test_basket <- read.csv('../Dataset/data_Bplayers_2000_TEST.csv')
#Creating and applying a function for common pre-treatment of train and test
pre_treat <- function(dataset){
#Create dummies for the role
dataset$pos = lapply(dataset$pos, function(x) if (nchar(x)>2) {x=unlist(str_split(x, ",", simplify = TRUE)[1,1])} else {x})
dataset$pos = unlist(dataset[,"pos"])
dataset <- dummy_cols(dataset, select_columns = 'pos')
#Let's drop columns we won't use
drops <- c("season","Player",'tm','lg','Salary_Cap','Salary', 'pos')
dataset = dataset[ , !(names(dataset) %in% drops)]
#We replace NA with 0
dataset[is.na(dataset)] = 0
dataset
}
train_basket = pre_treat(train_basket)
test_basket = pre_treat(test_basket)
#Divide X and Y in test
test_basket_x = subset(test_basket, select = -Salary_Cap_Perc) # feature and target array
test_basket_y = test_basket[, "Salary_Cap_Perc"]
View(test_basket_x)
View(test_basket_x)
install.packages("installr")
library(installr)
updateR()
# 20630 - Introduction to Sports Analytics
# Group 2 Project 3 - Supervised Machine Learning Model
# Model X: Support Vector Machine
#Clear environment & set working directory
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Package download & import
listofpackages <- c("quantmod","PerformanceAnalytics","ellipse","reshape2","ggplot2", "rvest",
"stringr", "dygraphs", "dplyr","forecast", "aod","readr","rvest","lubridate",
"xml2", "caret", "gbm", "fastDummies", "pdp", "e1071", "kernlab")
for (j in listofpackages){
if(sum(installed.packages()[, 1] == j) == 0) {
install.packages(j)
}
library(j, character.only = T)
}
### 1. PREPROCESSING ###
#Load Data (both train and test)
train_basket <- read.csv('../Dataset/data_Bplayers_2000_TRAIN.csv')
test_basket <- read.csv('../Dataset/data_Bplayers_2000_TEST.csv')
#Creating and applying a function for common pre-treatment of train and test
pre_treat <- function(dataset){
#Create dummies for the role
dataset$pos = lapply(dataset$pos, function(x) if (nchar(x)>2) {x=unlist(str_split(x, ",", simplify = TRUE)[1,1])} else {x})
dataset$pos = unlist(dataset[,"pos"])
dataset <- dummy_cols(dataset, select_columns = 'pos')
#Let's drop columns we won't use
drops <- c("season","Player",'tm','lg','Salary_Cap','Salary', 'pos')
dataset = dataset[ , !(names(dataset) %in% drops)]
#We replace NA with 0
dataset[is.na(dataset)] = 0
dataset
}
train_basket = pre_treat(train_basket)
test_basket = pre_treat(test_basket)
#Divide X and Y in test
test_basket_x = subset(test_basket, select = -Salary_Cap_Perc) # feature and target array
test_basket_y = test_basket[, "Salary_Cap_Perc"]
#Cross validation
set.seed(123)
trctrl <- trainControl(method = "cv", number = 5,)
### 4. FEATURES SELECTION ###
#Divide X and Y in train
train_basket_x = subset(train_basket, select = -Salary_Cap_Perc) # feature and target array
train_basket_y = train_basket[, "Salary_Cap_Perc"]
#Recursive feature elimination
svmFeatures <- rfe(train_basket_x, train_basket_y, sizes = c(5, 10, 20, 30, 40, 52),
rfeControl = rfeControl(functions = rfFuncs, method = 'cv', number = 5), method = "svmRadial")
print(svmFeatures)
#Save features
saveRDS(svmFeatures, file = "svmFeatures.Rds")
#Load model
# svmFeatures <- readRDS(file = "svmFeatures.Rds")
### 4. FEATURES SELECTION ###
#Divide X and Y in train
train_basket_x = subset(train_basket, select = -Salary_Cap_Perc) # feature and target array
train_basket_y = train_basket[, "Salary_Cap_Perc"]
#Recursive feature elimination
svmFeatures <- rfe(train_basket_x, train_basket_y, sizes = c(5, 10, 20, 30, 40, 52),
rfeControl = rfeControl(functions = caretFuncs, method = 'cv', number = 5), method = "svmRadial")
print(svmFeatures)
#Save features
saveRDS(svmFeatures, file = "svmFeatures.Rds")
#Save features
saveRDS(svmFeatures, file = "svmFeatures.Rds")
#Load model
svm_tuned <- readRDS(file = "svm_tuned.Rds")
RMSE_tuned = sqrt(mean((test_basket_y - pred_tuned)^2))
#Prediction
pred_tuned = predict(svm_tuned, newdata=test_basket_x)
RMSE_tuned = sqrt(mean((test_basket_y - pred_tuned)^2))
RMSE_tuned
